{"version":3,"sources":["presentational/mentor-select-presentational.js","services/mentor-select.js","constants/index.js","services/table-column.js","services/table-row.js","services/first-row.js","services/mentor-table.js","presentational/legend.js","App.js","index.js"],"names":["MentorSelectPresentational","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","react_select_esm","props","onChange","options","Component","MentorSelect","_this","call","push","label","toString","mentor_select_presentational_MentorSelectPresentational","constants","checking","checked","inProgress","toDo","TableColumn","className","status","link","json","mentor","mentorGitHub","newStudentsArray","filter","obj","student","studentName","tasks","task","length","score","TableRow","students","taskStatus","href","taskLink","taskName","map","index","FirstRow","split","MentorTable","data","default","_this2","Legend","App","state","selectedOption","JSON","parse","localStorage","getItem","handleChange","setItem","stringify","setState","console","log","mentor_select_MentorSelect","mentor_table_MentorTable","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.eae8255d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\n\nexport class MentorSelectPresentational extends Component{\n    render() {\n        return(\n            <Select\n                value={this.props.value}\n                onChange={this.props.onChange}\n                options={this.props.options}\n            />\n        )\n    }\n}","import React, { Component } from 'react';\nimport { MentorSelectPresentational } from '../presentational/mentor-select-presentational';\n\nexport class MentorSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.options = null;\n  }\n\n  componentWillMount() {\n    const options = [];\n    for (let key in this.props.options) {\n      options.push({\n        value: key, label: key.toString()\n      })\n    }\n    this.options = options;\n  }\n  \n  render() {\n    return (\n      <MentorSelectPresentational value={this.props.value} onChange={this.props.onChange} options={this.options}/>            \n    );\n  }\n}","export default {\n    checking: 'Checking',\n    checked: 'Checked',\n    inProgress: 'In progress',\n    toDo: 'ToDo',\n}","import React from 'react';\nimport * as json from '../data.json';\nimport constants from '../constants';\n\nexport default function TableColumn(props) {\n  let className;\n  switch (props.status) {\n    case constants.checked:\n      className = 'green-colored';\n      break;\n    case constants.checking:\n      className = 'pink-colored';\n      break;\n    case constants.inProgress:\n      className = 'orange-colored';\n      break;\n    case constants.toDo:\n      className = 'blue-colored';\n      break;\n    default:\n      className = 'white-colored';\n  }\n\n  const link = json.mentors[props.mentor].mentorGitHub;\n  let newStudentsArray = json.score[link];\n\n  if (!newStudentsArray) {\n    return (<td className=\"white-colored\"></td>)\n  }\n\n  newStudentsArray = newStudentsArray.filter(obj => obj.student === props.student.studentName);\n  newStudentsArray = newStudentsArray.filter(obj => obj.tasks.task === props.task);\n\n  if (newStudentsArray.length) {\n    const score = newStudentsArray[0].tasks.score;\n    return (<td className=\"green-colored\">{score}</td>)\n  } else {\n    if (className === 'blue-colored') {\n      return (<td className={className}></td>)\n    }\n\n    if (className === 'orange-colored') {\n      return (<td className={className}></td>)\n    }\n\n    if (className === 'pink-colored') {\n      return (<td className={className}></td>)\n    }\n\n    if (className === 'white-colored') {\n      return (<td className={className}></td>)\n    }\n\n    return (<td className='red-colored'></td>)\n  }\n}","import React from 'react';\nimport TableColumn from './table-column';\nimport * as json from '../data.json';\nimport constants from '../constants';\n\nexport default function TableRow(props) {\n  let className;\n  const students = json.mentors[props.mentor].students;\n  switch (props.task.taskStatus) {\n    case constants.checked:\n      className = 'green-colored';\n      break;\n    case constants.checking:\n      className = 'pink-colored';\n      break;\n    case constants.inProgress:\n      className = 'orange-colored';\n      break;\n    case constants.toDo:\n      className = 'blue-colored';\n      break;\n    default:\n      className = 'white-colored';\n  }\n  return (\n    <tr>\n      <td className={className}>\n        <a href={props.task.taskLink}>{props.task.taskName}</a>\n      </td>\n      {\n        students.map((student, index) => {\n          return <TableColumn status={props.task.taskStatus} task={props.task.taskName} mentor={props.mentor} student={student} key={index} />\n        })\n      }\n    </tr>\n  )\n}","import React from 'react';\nimport * as json from '../data.json';\n\nexport default function FirstRow (props) {\n  const students = json.mentors[props.mentor].students\n  return (\n    <tr>\n      <td>Tasks:</td>\n      {\n        students.map((student, index) => {\n          return <td key={index}>\n            <a href={student.studentName}>{student.studentName.split('/')[3]}</a>\n          </td>\n        })\n      }\n    </tr>\n  )\n}","import React, { Component } from 'react';\nimport TableRow from './table-row';\nimport FirstRow from './first-row';\n\nexport class MentorTable extends Component {\n  constructor(props) {\n    super(props);\n    this.tasks = props.data.default.tasks;\n  }\n\n  render() {\n    return (\n      <div>\n        {\n          this.props.mentor !== null &&\n          <table className=\"table\">\n            <tbody>\n              <FirstRow mentor={this.props.mentor.value} />\n              {\n                this.tasks.map((task, index) => {\n                  return <TableRow key={index} task={task} mentor={this.props.mentor.value} />\n                })\n              }\n            </tbody>\n          </table>\n        }\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default function Legend() {\n    return (\n        <table className=\"legend\">\n            <tbody>\n                <tr>\n                    <td className=\"green-colored\"></td>\n                    <td>Task is checked</td>\n                </tr>\n                <tr>\n                    <td className=\"pink-colored\"></td>\n                    <td>Task need to be checked</td>\n                </tr>\n                <tr>\n                    <td className=\"orange-colored\"></td>\n                    <td>Task is in progress</td>\n                </tr>\n                <tr>\n                    <td className=\"blue-colored\"></td>\n                    <td>Task need to be created (ToDo status)</td>\n                </tr>\n                <tr>\n                    <td className=\"white-colored\"></td>\n                    <td>No information given</td>\n                </tr>\n                <tr>\n                    <td className=\"red-colored\"></td>\n                    <td>Time is gone, no mark from mentor</td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}","import React, { Component } from 'react';\nimport * as json from './data.json';\nimport { MentorSelect } from './services/mentor-select';\nimport { MentorTable } from './services/mentor-table';\nimport Legend from './presentational/legend';\nimport './app.css';\nimport './reset.css';\n\n\nclass App extends Component {\n  state = {\n    selectedOption: JSON.parse(localStorage.getItem('mentor')) || null,\n  }\n\n  handleChange = (selectedOption) => {\n    localStorage.setItem('mentor', JSON.stringify(selectedOption));\n    this.setState({ selectedOption });\n  }\n  render() {\n    console.log(this.state);\n    return (\n      <main className=\"main\">\n        <MentorSelect onChange={this.handleChange} options={json.mentors} value={this.state.selectedOption} />\n        <MentorTable data={json} mentor={this.state.selectedOption}/>\n        <Legend />\n      </main>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}